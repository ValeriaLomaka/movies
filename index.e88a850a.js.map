{"mappings":"AACA,IAAMA,SAAW,+BACXC,UAAY,uBACZC,QAAU,mCACVC,MAAQC,SAASC,cAAc,aAC/BC,KAAOF,SAASC,cAAc,YAEhCE,KAAO,EAELC,QAAU,CACdC,KAAM,KACNC,WAAY,QACZC,UAAW,GAGTC,SAAW,IAAIC,qBAAqBC,kBAAmBN,SACvDO,gBAAkB,EAGtB,SAASD,kBAAkBE,GACvBA,EAAQC,SAAQ,SAACC,GACTA,EAAMC,gBAENC,aADAb,MAAQ,GAEPc,MAAK,SAAAC,G,OACNhB,KAAKiB,mBAAmB,YAAaC,aAAaF,EAAKG,S,OAMnE,SAASL,e,IAAaM,EAAAC,UAAAC,OAAA,YAAAD,UAAA,GAAQA,UAAA,GAAD,EACzB,OAAOE,MAAM,GAAcC,OAAX9B,UAAgC8B,OAArB7B,UAAU,aAA2B6B,OAAhB5B,QAAQ,UAAa4B,OAALJ,IAC/DL,MAAK,SAAAU,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,YAE3B,OAAOH,EAASI,M,IActB,SAASX,aAAaY,GAClB,OAAOA,EAAIC,KAAI,SAAAC,G,IAAGC,EAAcD,EAAdC,eAAgBC,EAAWF,EAAXE,YAAaC,EAAYH,EAAZG,a,MAC/C,+EAEgEX,OAArBU,EAAY,WACjDV,OAD0DS,EAAe,iBAErDT,OADpBS,EAAe,uCACkBT,OAAbW,EAAa,wB,IACzBC,KAAK,G,CAzCvB9B,SAAS+B,QAAQxC,OAyBjBiB,eACGC,MAAK,SAAAC,GACFhB,KAAKiB,mBAAmB,YAAaC,aAAaF,EAAKG,UACnDH,EAAKsB,YAActB,EAAKf,MACxBK,SAAS+B,QAAQxC,M,IAGxB0C,OAAM,SAAAC,G,OAASC,QAAQC,IAAIF,E","sources":["src/index.js"],"sourcesContent":["\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst END_POINT = '/trending/movie/week';\nconst API_KEY = '345007f9ab440e5b86cef51be6397df1';\nconst guard = document.querySelector('.js-guard');\nconst list = document.querySelector('.js-list');\n\nlet page = 1;\n\nconst options = {\n  root: null,\n  rootMargin: '400px',\n  threshold: 0,\n};\n\nlet observer = new IntersectionObserver(handlerPagination, options);\nlet counterObserver = 0;\nobserver.observe(guard);\n\nfunction handlerPagination(entries) {\n    entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n            page += 1;\n            serviceMovie(page)\n            .then(data =>\n            list.insertAdjacentHTML('beforeend', createMarkup(data.results))\n            );    \n      }\n  })\n}\n\nfunction serviceMovie(page = 1) {\n    return fetch(`${BASE_URL}${END_POINT}?api_key=${API_KEY}&page=${page}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      return response.json();\n    }\n  );\n}\n\nserviceMovie()\n  .then(data => {\n      list.insertAdjacentHTML('beforeend', createMarkup(data.results))\n      if (data.total_pages > data.page) {\n          observer.observe(guard)\n      }\n  })\n  .catch(error => console.log(error));\n\nfunction createMarkup(arr) {\n    return arr.map(({ original_title, poster_path, vote_average }) =>\n    `<div class='card'>\n    <li>\n    <img src=\"https://image.tmdb.org/t/p/w300${poster_path}\" alt=\"${original_title}\" >\n    <h2>${original_title}</h2>\n    <p class = 'rating-box'>${vote_average}</p>\n    </li></div>`).join('');\n}\n\n\n"],"names":["BASE_URL","END_POINT","API_KEY","guard","document","querySelector","list","page","options","root","rootMargin","threshold","observer","IntersectionObserver","handlerPagination","counterObserver","entries","forEach","entry","isIntersecting","serviceMovie","then","data","insertAdjacentHTML","createMarkup","results","page1","arguments","length","fetch","concat","response","ok","Error","statusText","json","arr","map","param","original_title","poster_path","vote_average","join","observe","total_pages","catch","error","console","log"],"version":3,"file":"index.e88a850a.js.map"}